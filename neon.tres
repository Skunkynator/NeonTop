[gd_resource type="VisualShader" load_steps=33 format=2]

[sub_resource type="VisualShaderNodeScalarConstant" id=1]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorFunc" id=2]
function = 6

[sub_resource type="VisualShaderNodeVectorOp" id=3]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=4]
constant = 2.0

[sub_resource type="VisualShaderNodeVectorOp" id=5]
operator = 5

[sub_resource type="VisualShaderNodeScalarConstant" id=6]
constant = 8.0

[sub_resource type="VisualShaderNodeVectorOp" id=7]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=8]
constant = 1.4

[sub_resource type="VisualShaderNodeVectorLen" id=9]

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "color"

[sub_resource type="VisualShaderNodeVectorOp" id=11]
operator = 2

[sub_resource type="VisualShaderNodeColorUniform" id=12]
uniform_name = "Colour"

[sub_resource type="VisualShaderNodeScalarUniform" id=13]
uniform_name = "Scale"

[sub_resource type="VisualShaderNodeScalarOp" id=14]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 3

[sub_resource type="VisualShaderNodeInput" id=15]
input_name = "normal"

[sub_resource type="VisualShaderNodeScalarConstant" id=16]

[sub_resource type="VisualShaderNodeVectorOp" id=17]

[sub_resource type="VisualShaderNodeVec3Uniform" id=18]
uniform_name = "Offset"

[sub_resource type="VisualShaderNodeInput" id=19]
input_name = "camera"

[sub_resource type="VisualShaderNodeTransformVecMult" id=20]
operator = 2

[sub_resource type="VisualShaderNodeTransformVecMult" id=21]
operator = 3

[sub_resource type="VisualShaderNodeInput" id=22]
input_name = "world"

[sub_resource type="VisualShaderNodeDotProduct" id=23]

[sub_resource type="VisualShaderNodeScalarOp" id=24]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=25]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=26]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=27]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 5

[sub_resource type="VisualShaderNodeScalarFunc" id=28]
function = 12

[sub_resource type="VisualShaderNodeVectorFunc" id=29]
function = 20

[sub_resource type="VisualShaderNodeVectorOp" id=30]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=31]
operator = 1

[sub_resource type="VisualShaderNodeInput" id=32]
input_name = "vertex"

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx, unshaded;

uniform vec3 Offset;
uniform float Scale;
uniform vec4 Colour : hint_color;



void vertex() {
// Input:2
	vec3 n_out2p0 = VERTEX;

// Output:0
	COLOR.rgb = n_out2p0;

}

void fragment() {
// Input:2
	vec3 n_out2p0 = COLOR.rgb;

// VectorUniform:30
	vec3 n_out30p0 = Offset;

// VectorOp:29
	vec3 n_out29p0 = n_out2p0 + n_out30p0;

// ScalarUniform:23
	float n_out23p0 = Scale;

// ScalarOp:24
	float n_in24p0 = 1.00000;
	float n_out24p0 = n_in24p0 / n_out23p0;

// VectorOp:7
	vec3 n_out7p0 = n_out29p0 * vec3(n_out24p0);

// VectorFunc:5
	vec3 n_out5p0 = fract(n_out7p0);

// Scalar:10
	float n_out10p0 = 0.500000;

// VectorOp:9
	vec3 n_out9p0 = n_out5p0 - vec3(n_out10p0);

// VectorFunc:11
	vec3 n_out11p0 = abs(n_out9p0);

// Scalar:13
	float n_out13p0 = 2.000000;

// VectorOp:12
	vec3 n_out12p0 = n_out11p0 * vec3(n_out13p0);

// Scalar:15
	float n_out15p0 = 8.000000;

// VectorOp:14
	vec3 n_out14p0 = pow(n_out12p0, vec3(n_out15p0));

// Scalar:18
	float n_out18p0 = 1.400000;

// VectorOp:17
	vec3 n_out17p0 = n_out14p0 * vec3(n_out18p0);

// VectorLen:19
	float n_out19p0 = length(n_out17p0);

// ScalarOp:37
	float n_out37p0 = n_out19p0 * n_out19p0;

// Input:34
	mat4 n_out34p0 = WORLD_MATRIX;

// Input:31
	mat4 n_out31p0 = CAMERA_MATRIX;

// Input:27
	vec3 n_out27p0 = NORMAL;

// TransformVectorMult:32
	vec3 n_out32p0 = (n_out31p0 * vec4(n_out27p0, 0.0)).xyz;

// TransformVectorMult:33
	vec3 n_out33p0 = (vec4(n_out32p0, 0.0) * n_out34p0).xyz;

// DotProduct:35
	float n_out35p0 = dot(n_out17p0, n_out33p0);

// ScalarOp:38
	float n_out38p0 = n_out35p0 * n_out35p0;

// ScalarOp:36
	float n_out36p0 = n_out37p0 - n_out38p0;

// ScalarFunc:44
	float n_out44p0 = abs(n_out36p0);

// ScalarOp:39
	float n_in39p1 = 0.50000;
	float n_out39p0 = pow(n_out44p0, n_in39p1);

// ColorUniform:22
	vec3 n_out22p0 = Colour.rgb;
	float n_out22p1 = Colour.a;

// VectorOp:20
	vec3 n_out20p0 = vec3(n_out39p0) * n_out22p0;

// Scalar:28
	float n_out28p0 = 0.000000;

// Output:0
	ALBEDO = n_out20p0;
	SPECULAR = n_out28p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 2393.77, 0 )
flags/unshaded = true
nodes/vertex/0/position = Vector2( 1100, 0 )
nodes/vertex/2/node = SubResource( 32 )
nodes/vertex/2/position = Vector2( 940, 120 )
nodes/vertex/connections = PoolIntArray( 2, 0, 0, 6, 2, 0, 0, 6 )
nodes/fragment/0/position = Vector2( 3340, 120 )
nodes/fragment/2/node = SubResource( 10 )
nodes/fragment/2/position = Vector2( 680, 40 )
nodes/fragment/5/node = SubResource( 29 )
nodes/fragment/5/position = Vector2( 1200, 40 )
nodes/fragment/7/node = SubResource( 30 )
nodes/fragment/7/position = Vector2( 1020, 40 )
nodes/fragment/9/node = SubResource( 31 )
nodes/fragment/9/position = Vector2( 1380, 60 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 1200, 120 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 1540, 80 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 1720, 80 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( 1540, 140 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( 1920, 80 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( 1720, 180 )
nodes/fragment/17/node = SubResource( 7 )
nodes/fragment/17/position = Vector2( 2080, 100 )
nodes/fragment/18/node = SubResource( 8 )
nodes/fragment/18/position = Vector2( 1900, 180 )
nodes/fragment/19/node = SubResource( 9 )
nodes/fragment/19/position = Vector2( 2280, 100 )
nodes/fragment/20/node = SubResource( 11 )
nodes/fragment/20/position = Vector2( 3100, 140 )
nodes/fragment/22/node = SubResource( 12 )
nodes/fragment/22/position = Vector2( 2900, 240 )
nodes/fragment/23/node = SubResource( 13 )
nodes/fragment/23/position = Vector2( 680, 180 )
nodes/fragment/24/node = SubResource( 14 )
nodes/fragment/24/position = Vector2( 860, 140 )
nodes/fragment/27/node = SubResource( 15 )
nodes/fragment/27/position = Vector2( 1620, 380 )
nodes/fragment/28/node = SubResource( 16 )
nodes/fragment/28/position = Vector2( 3100, 240 )
nodes/fragment/29/node = SubResource( 17 )
nodes/fragment/29/position = Vector2( 860, 40 )
nodes/fragment/30/node = SubResource( 18 )
nodes/fragment/30/position = Vector2( 680, 100 )
nodes/fragment/31/node = SubResource( 19 )
nodes/fragment/31/position = Vector2( 1660, 300 )
nodes/fragment/32/node = SubResource( 20 )
nodes/fragment/32/position = Vector2( 1820, 300 )
nodes/fragment/33/node = SubResource( 21 )
nodes/fragment/33/position = Vector2( 2040, 240 )
nodes/fragment/34/node = SubResource( 22 )
nodes/fragment/34/position = Vector2( 1900, 240 )
nodes/fragment/35/node = SubResource( 23 )
nodes/fragment/35/position = Vector2( 2280, 200 )
nodes/fragment/36/node = SubResource( 24 )
nodes/fragment/36/position = Vector2( 2600, 120 )
nodes/fragment/37/node = SubResource( 25 )
nodes/fragment/37/position = Vector2( 2440, 60 )
nodes/fragment/38/node = SubResource( 26 )
nodes/fragment/38/position = Vector2( 2440, 160 )
nodes/fragment/39/node = SubResource( 27 )
nodes/fragment/39/position = Vector2( 2940, 120 )
nodes/fragment/44/node = SubResource( 28 )
nodes/fragment/44/position = Vector2( 2760, 140 )
nodes/fragment/connections = PoolIntArray( 7, 0, 5, 0, 5, 0, 9, 0, 10, 0, 9, 1, 11, 0, 12, 0, 13, 0, 12, 1, 15, 0, 14, 1, 14, 0, 17, 0, 18, 0, 17, 1, 22, 0, 20, 1, 12, 0, 14, 0, 29, 0, 7, 0, 30, 0, 29, 1, 7, 0, 5, 0, 5, 0, 9, 0, 10, 0, 9, 1, 9, 0, 11, 0, 11, 0, 12, 0, 13, 0, 12, 1, 15, 0, 14, 1, 14, 0, 17, 0, 18, 0, 17, 1, 22, 0, 20, 1, 12, 0, 14, 0, 29, 0, 7, 0, 30, 0, 29, 1, 28, 0, 0, 4, 23, 0, 24, 1, 24, 0, 7, 1, 31, 0, 32, 0, 27, 0, 32, 1, 32, 0, 33, 1, 34, 0, 33, 0, 35, 0, 38, 1, 35, 0, 38, 0, 38, 0, 36, 1, 19, 0, 37, 0, 19, 0, 37, 1, 37, 0, 36, 0, 39, 0, 20, 0, 17, 0, 35, 0, 17, 0, 19, 0, 33, 0, 35, 1, 2, 0, 29, 0, 20, 0, 0, 0, 7, 0, 5, 0, 5, 0, 9, 0, 10, 0, 9, 1, 11, 0, 12, 0, 13, 0, 12, 1, 15, 0, 14, 1, 14, 0, 17, 0, 18, 0, 17, 1, 22, 0, 20, 1, 12, 0, 14, 0, 29, 0, 7, 0, 30, 0, 29, 1, 7, 0, 5, 0, 5, 0, 9, 0, 10, 0, 9, 1, 9, 0, 11, 0, 11, 0, 12, 0, 13, 0, 12, 1, 15, 0, 14, 1, 14, 0, 17, 0, 18, 0, 17, 1, 22, 0, 20, 1, 12, 0, 14, 0, 29, 0, 7, 0, 30, 0, 29, 1, 23, 0, 24, 1, 24, 0, 7, 1, 31, 0, 32, 0, 27, 0, 32, 1, 32, 0, 33, 1, 34, 0, 33, 0, 35, 0, 38, 1, 35, 0, 38, 0, 38, 0, 36, 1, 19, 0, 37, 0, 19, 0, 37, 1, 37, 0, 36, 0, 39, 0, 20, 0, 17, 0, 35, 0, 17, 0, 19, 0, 33, 0, 35, 1, 2, 0, 29, 0, 28, 0, 0, 4, 20, 0, 0, 0, 36, 0, 44, 0, 44, 0, 39, 0 )
